CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TYPE "user_role" AS ENUM (
  'Consumer',
  'Owner',
  'Employee',
  'DeliveryMan',
  'Admin'
);

CREATE TYPE "account_provider" AS ENUM (
  'Google',
  'Apple',
  'Meta',
  'Local'
);

CREATE TYPE "cousine_types" AS ENUM (
  'ITALIANA',
  'FRANCESA',
  'JAPONESA',
  'PORTUGUESA',
  'MEXICANA',
  'ARABE',
  'BRASILEIRA',
  'TAILANDESA',
  'DOCES',
  'SALGADOS'
);

CREATE TYPE "order_status" AS ENUM (
  'CREATED',
  'PROGRESS',
  'FINISHED',
  'CANCELED'
);

CREATE TYPE "weekday" AS ENUM (
  'MONDAY',
  'TUESDAY',
  'WEDNESDAY',
  'THURSDAY',
  'FRIDAY',
  'SATURDAY',
  'SUNDAY'
);

CREATE TABLE "users" (
  "id" UUID DEFAULT uuid_generate_v4() UNIQUE PRIMARY KEY,
  "profile_id" integer,
  "email" varchar UNIQUE NOT NULL,
  "password" varchar,
  "role" user_role NOT NULL,
  "account_provider" account_provider NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "profile" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "name" varchar(25) NOT NULL,
  "last_name" varchar(75) NOT NULL,
  "cpf" varchar(11) UNIQUE NOT NULL,
  "phone" varchar(14) NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "address" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "profile_id" integer,
  "street" varchar NOT NULL,
  "number" varchar NOT NULL,
  "complement" varchar NOT NULL,
  "district" varchar NOT NULL,
  "cep" varchar NOT NULL,
  "city" varchar NOT NULL,
  "state" varchar NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "owner" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "users_id" UUID NOT NULL,
  "restaurant_id" integer,
  "created_at" TIMESTAMPTZ,
  "deleted_at" TIMESTAMPTZ
);

CREATE TABLE "employee" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "users_id" UUID NOT NULL,
  "created_at" TIMESTAMPTZ,
  "deleted_at" TIMESTAMPTZ
);

CREATE TABLE "employee_restaurant" (
  "employee_id" integer NOT NULL,
  "restaurant_id" integer NOT NULL
);

CREATE TABLE "restaurant" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "name" varchar NOT NULL,
  "cnpj" varchar UNIQUE NOT NULL,
  "phone" varchar UNIQUE NOT NULL,
  "score" decimal(4,2),
  "address_id" integer NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ,
  "deleted_at" TIMESTAMPTZ
);

CREATE TABLE "restaurant_cousine_type" (
  "restaurant_id" integer NOT NULL,
  "cousine_type_id" integer NOT NULL
);

CREATE TABLE "cousine_type" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "name" cousine_types NOT NULL
);

CREATE TABLE "order" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "profile_id" integer NOT NULL,
  "shipping_value" decimal(4,2) NOT NULL,
  "total_value" decimal(4,2) NOT NULL,
  "status" order_status NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ,
  "deleted_at" TIMESTAMPTZ
);

CREATE TABLE "order_item" (
  "order_id" integer NOT NULL,
  "item_id" integer NOT NULL
);

CREATE TABLE "item" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "restaurant_id" integer NOT NULL,
  "name" varchar NOT NULL,
  "description" varchar NOT NULL,
  "img" varchar NOT NULL,
  "value" decimal(4,2) NOT NULL,
  "score" decimal(3,2) NOT NULL,
  "created_at" TIMESTAMPTZ,
  "updated_at" TIMESTAMPTZ,
  "deleted_at" TIMESTAMPTZ
);

CREATE TABLE "payment_method" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "name" varchar NOT NULL,
  "description" varchar NOT NULL,
  "isOnline" boolean NOT NULL
);

CREATE TABLE "businessHour" (
  "restaurant_id" integer NOT NULL,
  "weekday" weekday NOT NULL,
  "opening_time" TIME NOT NULL,
  "closing_time" TIME NOT NULL
);

CREATE TABLE "restaurant_payment_method" (
  "payment_method_id" integer NOT NULL,
  "restaurant_id" integer NOT NULL
);

CREATE TABLE "profile_restaurant" (
  "profile_id" integer NOT NULL,
  "restaurant_id" integer NOT NULL
);

ALTER TABLE "users" ADD FOREIGN KEY ("profile_id") REFERENCES "profile" ("id");

ALTER TABLE "address" ADD FOREIGN KEY ("profile_id") REFERENCES "profile" ("id");

ALTER TABLE "owner" ADD FOREIGN KEY ("users_id") REFERENCES "users" ("id");

ALTER TABLE "owner" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "employee" ADD FOREIGN KEY ("users_id") REFERENCES "users" ("id");

ALTER TABLE "employee_restaurant" ADD FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "employee_restaurant" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "restaurant" ADD FOREIGN KEY ("address_id") REFERENCES "address" ("id");

ALTER TABLE "restaurant_cousine_type" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "restaurant_cousine_type" ADD FOREIGN KEY ("cousine_type_id") REFERENCES "cousine_type" ("id");

ALTER TABLE "order" ADD FOREIGN KEY ("profile_id") REFERENCES "profile" ("id");

ALTER TABLE "order_item" ADD FOREIGN KEY ("order_id") REFERENCES "order" ("id");

ALTER TABLE "order_item" ADD FOREIGN KEY ("item_id") REFERENCES "item" ("id");

ALTER TABLE "item" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "businessHour" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "restaurant_payment_method" ADD FOREIGN KEY ("payment_method_id") REFERENCES "payment_method" ("id");

ALTER TABLE "restaurant_payment_method" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");

ALTER TABLE "profile_restaurant" ADD FOREIGN KEY ("profile_id") REFERENCES "profile" ("id");

ALTER TABLE "profile_restaurant" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurant" ("id");