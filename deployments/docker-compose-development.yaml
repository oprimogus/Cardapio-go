version: "3.7"

services:
  # cardapiogo-api:
  #   build:
  #     context: ..
  #     dockerfile: build/Dockerfile
  #   env_file:
  #     - ../.env
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - observability

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: cardapiogo
      POSTGRES_PASSWORD: cardapiogo
    ports:
      - "5435:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - observability

  prometheus:
    image: bitnami/prometheus
    volumes:
      - ../configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
    networks:
      - observability

  promtail:
    image: grafana/promtail
    volumes:
      - /var/log/journal:/var/log/journal
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # Adicione esta linha
      - ../configs/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - observability

  loki:
    image: grafana/loki
    ports:
      - 3100:3100
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -print-config-stderr=true
    networks:
      - observability

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus
      - loki
    networks:
      - observability

volumes:
  postgres-data:
  prometheus_data:
  grafana_data:

networks:
  observability:
    driver: bridge
