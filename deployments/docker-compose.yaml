version: "3.7"

services:
  cardapiogo-api:
    build:
      context: ..
      dockerfile: build/Dockerfile
    environment:
      # APP
      - APP_REPO=${APP_REPO}
      - APP_NAME=${APP_NAME}
      # DATABASE
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MIGRATION_SOURCE_URL=${MIGRATION_SOURCE_URL}
      # API
      - API_PORT=${API_PORT}
      - API_BASE_PATH=${API_BASE_PATH}
      - API_ENVIRONMENT=${API_ENVIRONMENT}
      # JWT
      - JWT_EMISSOR=${JWT_EMISSOR}
      - JWT_SECRET=${JWT_SECRET}
      # OAuth2.0
      ## GOOGLE
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      ### URLS
      - GOOGLE_USER_INFO_URL=${GOOGLE_USER_INFO_URL}
    ports:
      - "8080:8080"
    networks:
      - observability

  prometheus:
    image: bitnami/prometheus
    volumes:
      - ../configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
    networks:
      - observability

  promtail:
    image: grafana/promtail
    volumes:
      - /var/log/journal:/var/log/journal
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # Adicione esta linha
      - ../configs/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - observability

  loki:
    image: grafana/loki
    ports:
      - 3100:3100
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -print-config-stderr=true
    networks:
      - observability

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus
      - loki
    networks:
      - observability

volumes:
  postgres-data:
  prometheus_data:
  grafana_data:

networks:
  observability:
    driver: bridge
