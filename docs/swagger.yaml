basePath: /api/v1
definitions:
  errors.ErrorResponse:
    properties:
      details: {}
      error:
        type: string
    type: object
  types.AccountProvider:
    enum:
    - Google
    - Apple
    - Meta
    - Local
    type: string
    x-enum-varnames:
    - AccountProviderGoogle
    - AccountProviderApple
    - AccountProviderMeta
    - AccountProviderLocal
  types.Role:
    enum:
    - Consumer
    - Owner
    - Employee
    - DeliveryMan
    - Admin
    type: string
    x-enum-varnames:
    - UserRoleConsumer
    - UserRoleOwner
    - UserRoleEmployee
    - UserRoleDeliveryMan
    - UserRoleAdmin
  user.CreateUserParams:
    properties:
      account_provider:
        $ref: '#/definitions/types.AccountProvider'
      email:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/types.Role'
    required:
    - email
    - password
    - role
    type: object
  user.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.UpdateUserParams:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/types.Role'
    required:
    - email
    - id
    - password
    - role
    type: object
  user.UpdateUserPasswordParams:
    properties:
      id:
        type: string
      new_password:
        type: string
      password:
        type: string
    required:
    - id
    - new_password
    - password
    type: object
  user.User:
    properties:
      account_provider:
        $ref: '#/definitions/types.AccountProvider'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      profile_id:
        type: integer
      role:
        $ref: '#/definitions/types.Role'
      updated_at:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Gustavo Ferreira
    url: http://www.swagger.io/support
  description: Simple API of Cardapio
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cardapio-Go
  version: "1.0"
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: Inicia fluxo de OAuth2
      produces:
      - application/json
      responses:
        "307":
          description: Temporary Redirect
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Inicia fluxo de OAuth2
      tags:
      - Auth
  /auth/callback:
    get:
      consumes:
      - application/json
      description: Callback de login via OAuth2
      produces:
      - application/json
      responses:
        "307":
          description: Temporary Redirect
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Callback de login via OAuth2
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      description: Login de usuário com email e senha
      parameters:
      - description: Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Login de usuário com email e senha
      tags:
      - Auth
  /user:
    get:
      consumes:
      - application/json
      description: Retorna uma lista de usuários com paginação
      parameters:
      - description: Número de itens por página
        in: query
        name: items
        required: true
        type: number
      - description: Página
        in: query
        name: page
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Retorna uma lista de usuários
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Cria um novo usuário através de login email/senha
      parameters:
      - description: CreateUserParams
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Adiciona um novo usuário
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Atualiza os dados do usuário
      parameters:
      - description: UpdateUserParams
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Atualiza os dados do usuário
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Retorna um usuário através do ID
      parameters:
      - description: ID do usuário (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Retorna um usuário
      tags:
      - User
  /user/change-password:
    put:
      consumes:
      - application/json
      description: Atualiza a senha do usuário
      parameters:
      - description: UpdateUserPasswordParams
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserPasswordParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Atualiza a senha do usuário
      tags:
      - User
securityDefinitions:
  JWT Token:
    in: 'header Cookie: token=$VALUE'
    name: Authorization
    type: apiKey
swagger: "2.0"
