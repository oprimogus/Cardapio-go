name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.0'
      
      - name: Create .env file
        run: |
          echo APP_REPO=${{ vars.APP_REPO }} >> .env
          echo APP_NAME=${{ vars.APP_NAME }} >> .env
          # Repita para cada variável necessária

      - name: Run Tests
        run: make test

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ vars.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./build/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ vars.APP_REPO }}/${{ vars.APP_NAME }}:${{ github.sha }}
      #       ${{ vars.APP_REPO }}/${{ vars.APP_NAME }}:latest

  deploy:
    name: Deploy in AWS
    needs: build 
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Instalar make caso não esteja instalado
            sudo apt update && sudo apt install -y make git
            
            # Clonar o repositório se o diretório Cardapio-go não existir
            if [ ! -d "Cardapio-go" ]; then
              git clone https://github.com/oprimogus/Cardapio-go.git
            fi
            
            # Acessar o diretório da API
            cd Cardapio-go
            
            # Definir as variáveis de ambiente
            export API_BASE_PATH="${{ vars.API_BASE_PATH }}"
            export API_ENVIRONMENT="${{ vars.API_ENVIRONMENT }}"
            export API_PORT="${{ vars.API_PORT }}"
            export APP_NAME="${{ vars.APP_NAME }}"
            export APP_REPO="${{ vars.APP_REPO }}"
            export GOOGLE_REDIRECT_URL="${{ vars.GOOGLE_REDIRECT_URL }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_USERNAME="${{ secrets.DB_USERNAME }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
            export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
            export JWT_EMISSOR="${{ secrets.JWT_EMISSOR }}"
            export JWT_SECRET="${{ secrets.JWT_SECRET }}"
            export MIGRATION_SOURCE_URL="${{ vars.MIGRATION_SOURCE_URL }}"
            export GOOGLE_USER_INFO_URL="${{ vars.GOOGLE_USER_INFO_URL }}"
            
            # Subir o ambiente usando docker-compose
            make docker-up

